<project name="spring-modules-sandbox" default="sandbox.build">

	<!-- load project properties -->
	<property file="project.properties"/>

	<target name="sandbox.clean" description="Clean sandbox output dirs">

		<delete dir="${sandbox.target.classes.dir}"/>
		<delete dir="${sandbox.target.testclasses.dir}"/>
		<delete dir="${sandbox.target.junit.reports.dir}"/>
		<delete dir="${sandbox.target.junit.summary.dir}"/>
		<delete dir="${sandbox.javadocs.dir}"/>

		<!-- Just kill target dir (it's safer). No need at this point to keep it. -->
		<delete dir="${sandbox.target.dir}"/>

	</target>


	<target name="sandbox.build" description="Compile sandbox source tree java files into class files">

		<echo message="WARNING: To keep things speedy, there's no Ant dependency on the build target"/>

		<mkdir dir="${sandbox.target.classes.dir}"/>
		<mkdir dir="${sandbox.target.classes.dir}/META-INF"/>

		<javac destdir="${sandbox.target.classes.dir}" source="1.3" target="1.3" debug="${debug}"
					 deprecation="false" optimize="false" failonerror="true">
			<src path="${sandbox.src.dir}"/>
			<classpath refid="all-libs"/>
			<classpath location="${target.classes.dir}"/>
		</javac>

		<copy todir="${sandbox.target.classes.dir}" preservelastmodified="true">
			<fileset dir="${sandbox.src.dir}">
				<include name="**/*.xml"/>
				<include name="**/*.dtd"/>
			</fileset>
		</copy>

	</target>


	<target name="sandbox.jar" depends="sandbox.build,initdist" description="Create jar with sandbox classes">

		<delete file="${dist.dir}/springmodules-sandbox.jar"/>

		<makejar jarfile="${dist.dir}/springmodules-sandbox.jar">
			<jar-contents>
				<fileset dir="${sandbox.target.classes.dir}">
					<include name="org/springmodules/**"/>
				</fileset>
			</jar-contents>
		</makejar>

	</target>


	<target name="sandbox.srczip" depends="initdist" description="Create sandbox source ZIP (containing Java sources)">

		<delete file="${dist.dir}/springmodules-sandbox-src.zip"/>

		<zip zipfile="${dist.dir}/springmodules-sandbox-src.zip">
			<fileset dir="${sandbox.src.dir}">
				<include name="org/springmodules/**"/>
			</fileset>
		</zip>

	</target>


	<target name="sandbox.buildtests" depends="sandbox.build" description="Compile test source tree Java files into class files">

		<mkdir dir="${sandbox.target.testclasses.dir}"/>

		<javac destdir="${sandbox.target.testclasses.dir}" source="1.3" target="1.3" debug="${debug}"
					 deprecation="false" optimize="false" failonerror="true">
			<src path="${sandbox.test.dir}"/>
			<classpath refid="all-libs"/>
			<classpath location="${target.classes.dir}"/>
			<classpath location="${sandbox.target.classes.dir}"/>
			<classpath location="${target.testclasses.dir}"/>
		</javac>

		<!-- Pick up logging config from test directory -->
		<copy todir="${sandbox.target.testclasses.dir}" preservelastmodified="true">
			<fileset dir="${sandbox.test.dir}">
				<include name="**/*.properties"/>
			</fileset>
			<fileset dir="${sandbox.test.dir}">
				<include name="**/*.xml"/>
			</fileset>
		</copy>

	</target>


<!--
		Run test suite. This and Clover test target take their includes and excludes
		from build.properties. However it's possible to run specific tests by passing in
		the test.includes and (optionally) test.excludes properties through the command line, as below:
			ant tests -Dtest.includes=org/springframework/jdbc/**/*Test*
	-->
	<target name="sandbox.tests" depends="sandbox.build,sandbox.buildtests" description="Run tests">

		<property name="sandbox.reports.dir" value="${sandbox.target.junit.reports.dir}"/>

		<mkdir dir="${sandbox.reports.dir}"/>

		<junit printsummary="yes" haltonfailure="yes" haltonerror="yes">

			<!-- Must go first to ensure any jndi.properties files etc take precedence  -->
			<classpath location="${sandbox.target.testclasses.dir}"/>
			<classpath location="${sandbox.target.classes.dir}"/>
			<classpath location="${target.testclasses.dir}"/>

			<!-- Need files loaded as resources -->
			<classpath location="${sandbox.test.dir}"/>

			<classpath refid="all-libs"/>
			<classpath location="${target.classes.dir}"/>

			<formatter type="plain" usefile="false"/>
			<formatter type="xml"/>

			<batchtest fork="yes" todir="${sandbox.reports.dir}">
				<fileset dir="${sandbox.target.testclasses.dir}" includes="${test.includes}" excludes="${test.excludes}"/>
			</batchtest>

		</junit>

	</target>


	<target name="sandbox.testsummary" depends="sandbox.build,sandbox.buildtests"
					description="Run tests and generate test summary">

		<property name="sandbox.reports.dir" value="${sandbox.target.junit.reports.dir}"/>

		<mkdir dir="${sandbox.reports.dir}"/>

		<property name="reports.dir" value="${sandbox.reports.dir}"/>
		<property name="summary.dir" value="${sandbox.reports.dir}/reports"/>

		<mkdir dir="${reports.dir}"/>
		<mkdir dir="${summary.dir}"/>

		<junit printsummary="yes" haltonfailure="no" haltonerror="no">
			<jvmarg line="-Djava.awt.headless=true"/>

			<!-- Must go first to ensure any jndi.properties files etc take precedence  -->
			<classpath location="${sandbox.target.testclasses.dir}"/>
			<classpath location="${sandbox.target.classes.dir}"/>
			<classpath location="${target.testclasses.dir}"/>
			<!-- Need files loaded as resources -->
			<classpath location="${sandbox.test.dir}"/>

			<classpath refid="all-libs"/>
			<classpath location="${target.classes.dir}"/>

			<formatter type="plain" usefile="false"/>
			<formatter type="xml"/>

			<batchtest fork="yes" todir="${reports.dir}">
				<fileset dir="${sandbox.target.testclasses.dir}" includes="${test.includes}" excludes="${test.excludes}"/>
			</batchtest>

		</junit>

		<junitreport todir="${reports.dir}">

			<fileset dir="${reports.dir}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report todir="${summary.dir}"/>

		</junitreport>

	</target>

	<target name="sandbox.clean_tests" depends="sandbox.clean, sandbox.tests"/>

	<target name="sandbox.javadoc" description="Generate framework Javadocs.">

		<mkdir dir="${sandbox.javadocs.dir}"/>

		<javadoc sourcepath="${sandbox.src.dir}" destdir="${sandbox.javadocs.dir}" windowtitle="Spring Framework"
						 additionalparam="-breakiterator" source="1.3" access="package" author="true" version="true" use="true"
						 defaultexcludes="true">
			<doctitle><![CDATA[<h1>Spring Modules Sandbox</h1>]]></doctitle>
			<bottom><![CDATA[<i>Copyright (C) 2004-2005 The Spring Modules Project.</i>]]></bottom>
			<classpath refid="all-libs"/>
			<classpath location="${target.classes.dir}"/>
			<packageset dir="${sandbox.src.dir}">
				<include name="org/springmodules/**"/>
			</packageset>
		</javadoc>

	</target>
	
</project>