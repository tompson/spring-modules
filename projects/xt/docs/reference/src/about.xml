<?xml version="1.0" encoding="UTF-8"?>
<sect1 id="about">
  <title>About XT Framework</title>

  <para>The XT Framework is a <ulink
  url="http://www.springframework.org"><citetitle>Spring</citetitle></ulink>
  module for developing applications with ''richer domain models and richer
  user interfaces'', following the <ulink
  url="http://domaindrivendesign.org"><citetitle>Domain Driven
  Design</citetitle></ulink> practices.</para>

  <para>Domain Driven Design puts the <ulink
  url="http://martinfowler.com/eaaCatalog/domainModel.html"><citetitle>domain
  model</citetitle></ulink> in the heart of the development process. The
  domain model becomes the core of your application and the main focus of your
  development. It concentrates all business logic, rules and constraints,
  being <emphasis role="bold">totally independent</emphasis> from other
  application parts. In particular, considering a standard layered
  architecture, domain models are designed to be independent from the so
  called <emphasis>presentation layer</emphasis> and
  <emphasis>infrastructure/data access layer</emphasis>. Unfortunately,
  practically speaking, this causes a sort of <emphasis>impedence
  mismatch</emphasis> among layers, causing code duplication, domain model
  corruption, or the infamous <ulink
  url="http://www.martinfowler.com/bliki/AnemicDomainModel.html"><citetitle>anemic
  domain model</citetitle></ulink> phenomenon.</para>

  <para>The XT Framework aims at solving this mismatch providing the so called
  <emphasis role="bold">XT Modeling Framework</emphasis> for developing
  <emphasis>rich domain models</emphasis>, which gracefully adapt to other
  layers.</para>

  <para>And if you have a rich domain model, why not having a <emphasis>rich
  user interface</emphasis>? The XT Framework provides also the <emphasis
  role="bold">XT Ajax Framework</emphasis>, which integrates Spring and its
  MVC framework with <ulink
  url="http://adaptivepath.com/publications/essays/archives/000385.php"><citetitle>AJAX</citetitle></ulink>
  technologies.</para>

  <sect2 id="modeling-framework">
    <title id="modeling-framework-title">XT Modeling Framework</title>

    <para>XT Modeling Framework provides components for helping in developing
    rich domain models and making them collaborate with other application
    layers without violating DDD principles. At the moment it provides:
    <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Bean Introductor</emphasis> : Built on
          top of Spring AOP, it introduces JavaBeans style interfaces with
          getter/setter methods into domain objects, for adapting/decorating
          them.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Implementor Introductor</emphasis> :
          Built on top of Spring AOP, it introduces additional interfaces to
          already existent object, and automatically delegates the
          implementation of those interfaces to an external, independent,
          object.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Introductor Collections</emphasis> :
          Standard Java collections decorators for introducing interfaces into
          objects stored in collections, by using the introductor
          implementations above.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Dynamic Generator</emphasis> : Generic
          interface for dynamically generating Java objects.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Dynamic Factory Generator</emphasis> :
          Dynamic Generator that let you generate factory objects on the fly,
          providing only the factory interface.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Notifications</emphasis> : <ulink
          url="http://www.martinfowler.com/eaaDev/Notification.html"><citetitle>Notification</citetitle></ulink>
          objects, for carrying messages between different application
          layers.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Specifications</emphasis> : Generic
          interface for implementing <ulink
          url="http://www.martinfowler.com/apsupp/spec.pdf"><citetitle>Specifications</citetitle></ulink>
          capable of collecting messages of different types into notification
          objects</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Composite Specifications</emphasis> :
          Specifications implementation capable of being combined through
          logical operators, using a <ulink
          url="http://www.martinfowler.com/bliki/FluentInterface.html"><citetitle>fluent
          interface</citetitle></ulink>.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">Events</emphasis> : Additional
          facilities for implementing event-based architectures built on the
          standard Spring events system: events filtering, events collection
          and Event Driven POJOs.</para>
        </listitem>
      </itemizedlist></para>

    <para>If you want to learn more, take a look at XT Modeling Framework base
    concepts.</para>
  </sect2>

  <sect2 id="ajax-framework">
    <title id="ajax-framework-title">XT Ajax Framework</title>

    <para>XT Ajax Framework is an event based Ajax framework fully integrated
    with Spring MVC. Here are some of its major features:</para>

    <itemizedlist>
      <listitem>
        <para>No javascript code required, nor special template tags, just
        plain old HTML: we believe in Separation of Concerns and web pages
        with no extra logic.</para>
      </listitem>

      <listitem>
        <para>Based on web page level events fired as <ulink
        url="http://www.w3schools.com/js/js_events.asp"><citetitle>javascript
        events</citetitle></ulink>.</para>
      </listitem>

      <listitem>
        <para>Pure server side handling of page events.</para>
      </listitem>

      <listitem>
        <para>Ready to use actions and HTML components for page
        updating.</para>
      </listitem>

      <listitem>
        <para>Dramatically simplified handling of complex HTML forms
        logic.</para>
      </listitem>

      <listitem>
        <para>Only minor changes required for adapting your existing Spring
        MVC controllers and web pages.</para>
      </listitem>

      <listitem>
        <para>Secure.</para>
      </listitem>
    </itemizedlist>

    <para>If you want to learn more, take a look at XT Ajax Framework base
    concepts.</para>
  </sect2>

  <sect2>
    <title>JVM Requirements</title>

    <para>The XT Frameworks is based on Java 1.5.</para>

    <para>However, since version 0.9, it is distributed with two jar archives
    backported for working in Java 1.4 environments.</para>
  </sect2>
</sect1>