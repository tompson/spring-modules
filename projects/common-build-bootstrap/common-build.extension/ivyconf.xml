<ivyconf>
  <!-- hook up initial file -->
  <include file="${ivy.custom.resolver}"/>	
	
  <properties file="${ivy.conf.dir}/ivyconf.properties"/>
	
  <conf defaultResolver="libs"/>
  <resolvers>
    <chain name="libs">
      <filesystem name="integration-repo">
        <ivy pattern="${integration.repo.dir}/artifacts/[organisation]/[module]/ivy-[revision].xml"/>
        <artifact pattern="${integration.repo.dir}/artifacts/[organisation]/[module]/[type]s/[artifact]-[revision].[ext]" />
      </filesystem>

      <filesystem name="filesystem-repo">
        <ivy pattern="${repository.dir}/[organisation]/[module]/ivy-[revision].xml" />
        <artifact pattern="${repository.dir}/[organisation]/[module]/[type]s/[artifact]-[revision].[ext]" />
      </filesystem>
		
      <ivyrep name="ivyrep"/>
		
	  <!-- ibiblio maven 2 compatible resolver -->
	  <!-- solve some of the problem when a jar breaks the pattern, i.e. jboss-cache is
		  under jboss folder which means forces the user to use the name of the module
		  jboss when in fact it is jboss-cache. With maven2 namings this problem does
		  not occur -->
	  <ibiblio name="ibiblio-maven2" m2compatible="true" root="http://www.ibiblio.org/maven2"/>					
	  <ibiblio name="org-ibiblio" m2compatible="false" root="http://www.ibiblio.org/maven2/org/" pattern="[module]/[artifact]/[revision]/[artifact]-[revision].[ext]" />				
		
	  <!-- custom per-project resolvers -->
	  <resolver ref="custom"/>

    </chain>
  </resolvers>
</ivyconf>
