<sect1 id='about'><title>About Spring Modules XT</title>
    <para>Spring Modules XT is a <ulink url='http://www.springframework.org'><citetitle>Spring Framework</citetitle></ulink> module for developing applications with ''richer domain models and richer user interfaces'', following the <ulink url='http://domaindrivendesign.org'><citetitle>Domain Driven Design</citetitle></ulink> practices.
    </para>
    <para>Domain Driven Design puts the <ulink url='http://martinfowler.com/eaaCatalog/domainModel.html'><citetitle>domain model</citetitle></ulink> in the heart of the development process.
        The domain model becomes the core of your application and the main focus of your development.
        It concentrates all business logic, rules and constraints, being <emphasis role='bold'>totally independent</emphasis> from other application parts.
        In particular, considering a well-known layered architecture, domain models are designed to be independent from the so called <emphasis>presentation layer</emphasis> and <emphasis>infrastructure/data access layer</emphasis>. 
        Unfortunately, practically speaking, this causes a sort of <emphasis>impedence mismatch</emphasis> among layers, causing code duplication, domain model corruption, or the shy <ulink url='http://www.martinfowler.com/bliki/AnemicDomainModel.html'><citetitle>anemic domain model</citetitle></ulink>. 
    </para>
    <para>Spring Modules XT aims at solving this mismatch providing the so called Spring Modules XT Modeling Framework for developing <emphasis>rich domain models</emphasis>, which gracefully adapt to other layers.
    </para>
    <para>And if you have a rich domain model, why not having a <emphasis>rich user interface</emphasis>?
        Spring Modules XT provides also the Spring Modules XT Ajax Framework, which integrates Spring and its MVC framework with <ulink url='http://adaptivepath.com/publications/essays/archives/000385.php'><citetitle>AJAX</citetitle></ulink> technologies. 
    </para>
    <sect2 id='modeling-framework'><title id='modeling-framework-title'>Spring Modules XT Modeling Framework</title>
        <para>Spring Modules XT Modeling Framework provides components for developing rich domain models and making them collaborate with other application layers without violating DDD principles.
            At the moment it provides: 
            <itemizedlist>
                <listitem>
                    <emphasis role='bold'>DynamicIntroductor</emphasis> : Generic interface for introducing additional interfaces into plain old Java objects. 
                </listitem>
                <listitem><emphasis role='bold'>Bean Introductor</emphasis> : Built on top of Spring AOP and DynamicIntroductor interface, it introduces JavaBeans style interfaces with getter/setter methods into domain objects, for adapting/decorating them. 
                </listitem>
                <listitem><emphasis role='bold'>Introductor Collections</emphasis> : Standard Java collections decorators for introducing interfaces into objects stored in collections. 
                </listitem>
                <listitem><emphasis role='bold'>Notifications</emphasis> : <ulink url='http://www.martinfowler.com/eaaDev/Notification.html'><citetitle>Notification</citetitle></ulink> objects, for carrying messages between different application layers. 
                </listitem>
                <listitem><emphasis role='bold'>Specifications</emphasis> : Generic interface for implementing <ulink url='http://www.martinfowler.com/apsupp/spec.pdf'><citetitle>Specifications</citetitle></ulink> capable of collecting messages of different types into notification objects.
                </listitem>
                <listitem><emphasis role='bold'>Composite Specifications</emphasis> : Specifications implementation capable of being combined through logical operators, using a <ulink url='http://www.martinfowler.com/bliki/FluentInterface.html'><citetitle>fluent interface</citetitle></ulink>.
                </listitem>
            </itemizedlist>
        </para>
        <para>If you want to learn more, take a look at Spring Modules XT Modeling Framework base concepts.
        </para>
    </sect2>
    <sect2 id='ajax-framework'><title id='ajax-framework-title'>Spring Modules XT Ajax Framework</title>
        <para>Spring Modules XT Ajax Framework is an event based Ajax framework fully integrated with Spring MVC.
        Here are some of its major features: </para>
        <itemizedlist>
            <listitem>
                <para>No javascript code required, nor special template tags, just plain old HTML: we believe in Separation of Concerns and web pages with no extra logic.
                </para>
            </listitem>
            <listitem>
                <para>Based on web page level events fired as <ulink url='http://www.w3schools.com/js/js_events.asp'><citetitle>javascript events</citetitle></ulink>.
                </para>
            </listitem>
            <listitem>
                <para>Pure server side handling of page events.
                </para>
            </listitem>
            <listitem>
                <para>Ready to use actions and HTML components for page updating.
                </para>
            </listitem>
            <listitem>
                <para>Dramatically simplified handling of complex HTML forms logic.
                </para>
            </listitem>
            <listitem>
                <para>Only minor changes required for adapting your existing Spring MVC controllers and web pages.
                </para>
            </listitem>
            <listitem>
                <para>Secure.</para>
            </listitem>
        </itemizedlist>
        <para>
            If you want to learn more, take a look at Spring Modules XT Ajax Framework base concepts. 
        </para>
    </sect2>
</sect1>
