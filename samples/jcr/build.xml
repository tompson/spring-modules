<?xml version="1.0"?>

<project name="spring-jcr-sample" basedir="." default="usage">

	<property name="name" value="spring-jcr-sample"/>

	<property name="src.dir" value="${basedir}/src"/>
	<property name="build.dir" value="${basedir}/.classes"/>
	<property name="dist.dir" value="${basedir}/dist"/>
	<property name="repository.dir" value="${basedir}/repo"/>
	
	<property name="springmodules.root" value="${basedir}/../.."/>
	<property name="springmodules.dist" value="${springmodules.root}/dist"/>
	
	<property name="main.class" value="org.springmodules.examples.jcr.Main"/>


	<path id="lib-classpath">

		<fileset dir="${springmodules.root}/lib/spring">
			<include name="spring.jar"/>
		</fileset>

		<fileset dir="${springmodules.root}/lib/cglib">
			<include name="*.jar"/>
		</fileset>
		
		<fileset dir="${springmodules.root}/lib/concurrent">
			<include name="concurrent*.jar"/>
		</fileset>
		<fileset dir="${springmodules.root}/lib/hsqldb">
			<include name="hsqldb*.jar"/>
		</fileset>
		
		<fileset dir="${springmodules.root}/lib/geronimo">
			<include name="geronimo*.jar"/>
		</fileset>

		<fileset dir="${springmodules.root}/lib/j2ee">
			<include name="jta*.jar"/>
			<include name="connector*.jar"/>			
		</fileset>
		
		<fileset dir="${springmodules.root}/lib/jakarta-commons">
			<include name="commons-collection*.jar"/>			
			<include name="commons-lang*.jar"/>
			<include name="commons-logging.jar"/>
		</fileset>
		<fileset dir="${springmodules.root}/lib/jackrabbit">
			<include name="*.jar"/>
		</fileset>
		
		<fileset dir="${springmodules.root}/lib/jcr">
			<include name="jcr-1.0.jar"/>
		</fileset>
		
		<fileset dir="${springmodules.root}/lib/jeceira">
			<include name="*.jar"/>
		</fileset>

		<fileset dir="${springmodules.root}/lib/jencks">
			<include name="*.jar"/>
		</fileset>

				
		<fileset dir="${springmodules.root}/lib/lucene">
			<include name="lucene*.jar"/>
		</fileset>
		<fileset dir="${springmodules.root}/lib/log4j">
			<include name="log4j*.jar"/>
		</fileset>
		<fileset dir="${springmodules.dist}">					
			<include name="*.jar"/>
		</fileset>

	</path>

	<path id="dist-classpath">

		<fileset dir="${dist.dir}">
			<include name="**/*.jar"/>
		</fileset>

		<fileset dir="${springmodules.dist}">
			<include name="springmodules.jar"/>
		</fileset>
	</path>

	<target name="usage">

		<echo message=""/>
		<echo message="Spring Jcr build file"/>
		<echo message="------------------------------------------------------"/>
		<echo message=""/>
		<echo message="Available targets are:"/>
		<echo message=""/>
		<echo message="clean    --> Clean output dirs"/>
		<echo message="build    --> Compile main Java sources and copy libraries"/>
		<echo message="launch   --> Run the example"/>		
		<echo message="all      --> Clean, build, warfile"/>
		<echo message=""/>

	</target>


	<target name="clean" description="Clean output dirs (build, weblib, dist)">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
	</target>

	<target name="build" description="Compile main source tree java files into class files, generate jar files">

		<mkdir dir="${build.dir}"/>

		<javac destdir="${build.dir}" source="1.3" target="1.3" debug="true"
					 deprecation="false" optimize="false" failonerror="true">
			<src path="${src.dir}"/>
			<classpath refid="lib-classpath"/>
		</javac>

		<copy todir="${build.dir}" preservelastmodified="true">
			<fileset dir="${src.dir}">
				<include name="**/*.xml"/>
				<include name="**/*.properties"/>
				<include name="**/*.file"/>
				<include name="**/jug-native/*"/>				
			</fileset>
		</copy>

	</target>

	<target name="launch" description="Launch the sample application" depends="build">

		<mkdir dir="${build.dir}/repo"/>
		<java classname="${main.class}" fork="yes" failonerror="true">
			<classpath refid="lib-classpath"/>
			<classpath>
				<pathelement path="${build.dir}"/>
			</classpath>
		</java>
	</target>

	<target name="dist" depends="build">
	<!--
			Delegate to build target by depending on it. dist is just to offer
			a generic target name across all Spring sample apps that may be used
			for autobuilds testing.
		-->
		<mkdir dir="${dist.dir}"/>
		<jar jarfile="${dist.dir}/${name}.jar" compress="true" basedir="${build.dir}"/>

	</target>


	<target name="all" depends="clean,build" description="Clean,build"/>

</project>